/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {                  //RECURSIVE//
        if(root==NULL || root->val==val) return root;
        TreeNode *l=searchBST(root->left,val);
        TreeNode *r=searchBST(root->right,val);
        return l ? l:r;
    }
};
-----------
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root==NULL || root->val==val) return root;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            TreeNode *fr=q.front();
            if(fr->val==val) return fr;
            q.pop();
            if(fr->left) q.push(fr->left);
            if(fr->right) q.push(fr->right);
        }
        return NULL;
    }
};
