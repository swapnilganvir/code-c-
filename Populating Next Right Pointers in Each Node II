/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node *nextNode(Node *temp){
        temp=temp->next;
        while(temp){
            if(temp->left) return temp->left;
            if(temp->right) return temp->right;
            else temp=temp->next;
        }
        return NULL;
    }
    Node *connect(Node * root){
        if(root==NULL) return root;
        Node *temp=root;
        if(root->left){
            if(root->right) root->left->next=root->right;
            else root->left->next=nextNode(temp);
        }
        if(root->right){
            root->right->next=nextNode(temp);
            connect(root->right);
        }
        if(root->left) connect(root->left);
        return root;
    }
};
