class Solution {
public:
    bool search(vector<vector<char>>& board, string w, int i, int j, int id, vector<vector<bool>>& vis){
        if(id == w.size()){
            return true;
        }
        if(i < 0 || i >= board.size() || j < 0 || j >= board[0].size() || vis[i][j] || board[i][j] != w[id]){
            return false;
        }
        vis[i][j] = true;
        if(search(board, w, i, j+1, id+1, vis) || search(board, w, i, j-1, id+1, vis) || search(board, w, i+1, j, id+1, vis) || search(board, w, i-1, j, id+1, vis)){
            vis[i][j] = false;
            return true;
        }
        vis[i][j] = false;
        return false;
    }    
    vector<string> findWords(vector<vector<char>>& board, vector<string>& words){
        vector<string> ans;
        vector<vector<bool>> vis(board.size(), vector<bool> (board[0].size(), false));
        for(auto w : words){
            bool flag = false;
            for(int i = 0; i < board.size(); i++){
                for(int j = 0; j < board[0].size(); j++){
                    if(w[0] == board[i][j] && search(board, w, i, j, 0, vis)){
                        flag = true;
                        ans.push_back(w);
                        break;
                    }
                }
                if(flag){
                    break;
                }
            }
        }
        return ans;
    }
};
