/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head){
        if(head==NULL || head->next==NULL) return head;
        ListNode *pnext,*prev=NULL;
        while(head){
            pnext=head->next;
            head->next=prev;
            prev=head;
            head=pnext;
        }
        return prev;
    }
};
-------------
class Solution {
public:
    ListNode* r(ListNode* head,ListNode* prev) {
        if(head==NULL) return prev;                   //RECURSIVE//
        ListNode *pnext=head->next;
        head->next=prev;
        prev=head;
        return r(pnext,prev);
    }
    ListNode* reverseList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;
        return r(head,NULL);
    }
};
