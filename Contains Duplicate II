class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        if (nums.size() < 2 || k == 0){
            return false;
        }
        int r = 1, l = 0;
        while (l < nums.size())
        {
            if ((nums[l] == nums[r]) && (l != r))
                return true;
            if (r < nums.size() - 1 && (r - l < k))
                r++;
            else
                l++;
        }
        return false;
    }
};
-----------------------------
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map <int, int> mp;
        for(int i=0; i<nums.size(); i++){
            if(mp.find(nums[i]) != mp.end()){
                if(i-mp[nums[i]] <= k){
                    return true;
                }
                else mp[nums[i]]=i;
            }
            else mp[nums[i]]=i;
        }
        return false;
    }
};
