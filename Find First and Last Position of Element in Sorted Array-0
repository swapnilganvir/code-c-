class Solution {
    int search(vector<int> nums, int target){
        int mid,l=0,r=nums.size()-1,result=-1;
        while(l<=r){
            mid=l+(r-l)/2;       //for searching element if it exists and the starting point of occurence
            if(nums[mid]==target){
                result=mid;
                r=mid-1;
            }
            else if(nums[mid]>target) r=mid-1;
            else l=mid+1;
        }
        return result;
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int r=nums.size(),result=-1;
        vector<int> v;
        int x=search(nums,target);
        if(x==-1){
            v.push_back(-1);
            v.push_back(-1);
            return v;
        }
        else v.push_back(x);
        int i;
        for(i=x;i<r;i++){
            if(nums[i]!=target){
                v.push_back(i-1);
                return v;
            }
        }
        v.push_back(i-1);
        return v;
    }
};
