/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL) return NULL;
        Node *pr,*temp=head;
        while(temp){
            pr=temp->next;
            temp->next= new Node(temp->val);
            temp->next->next=pr;
            temp=pr;
        }
        pr=head,temp=head->next;
        while(temp){
            if(pr->random==NULL) temp->random=NULL;
            else temp->random=pr->random->next;
            if(temp->next==NULL) break;
            pr=temp->next;
            temp=pr->next;
        }
        pr=head,temp=head->next;
        Node *head1=temp;
        while(pr){
            pr->next=pr->next->next;
            if(pr->next==NULL) break;
            temp->next=temp->next->next;
            pr=pr->next;
            temp=temp->next;
        }
        return head1;
    }
};
