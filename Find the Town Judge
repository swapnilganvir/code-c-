class Solution {
public:
    int findJudge(int N, vector<vector<int>>& trust) {
        int s1[1001] = {};
        int in = -1, cnt = 0;
        for(int i = 0; i < trust.size(); i++){
            s1[trust[i][0]]++;
        }
        for(int i = 1; i <= N; i++){
            if(s1[i] == 0){
                in = i;
                break;
            }
        }
        if(in == -1) return -1;
        for(int i = 0; i < trust.size(); i++){
            if(trust[i][1] == in) cnt++;
        }
        if(cnt == N-1) return in;
        else return -1;
    }
};

-----------------------------------

class Solution {
public:
    int findJudge(int N, vector<vector<int>>& trust) {
        vector<pair<int, int>> arr(N+1, {0, 0});
        for(int i = 0; i < trust.size(); i++)
        {
            arr[trust[i][0]].first += 1;
            arr[trust[i][1]].second += 1;
        }
        
        for(int i = 1; i <= N; i++)
        {
            if(arr[i].first == 0 && arr[i].second == N-1){
                return i;
            }
        }
        return -1;
    }
};
