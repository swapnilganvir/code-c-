class Solution {
private:
    int count = 0;
public:
    int totalNQueens(int n) {
        vector<int> cols(n, 0);
        backT(cols, n, 0);
        return count;
    }
    void backT(vector<int>& cols,int n, int r){
        if(r==n){
            count++;
            return;
        }
        for(int i=0;i<n;i++){
            if(isValid(cols,i,r)){
                cols[r]=i;
                backT(cols,n,r+1);
            }
        }
    }
    bool isValid(vector<int>& cols, int col, int row) {
        for (int i = 0; i < row; i++) {
            if (cols[i] == col) return false;
        }
        for (int i = 0; i < row; i++) {
            if (i - cols[i] == row - col) return false;
        }
        for (int i = 0; i < row; i++) {
            if (i + cols[i] == row + col) return false;
        }
        return true;
    }
};
